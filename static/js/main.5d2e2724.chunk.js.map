{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","handleTab","selectedTab","find","tab","id","className","map","type","cs","onClick","title","content","initialTab","length","App","useState","setSelectedTab","newTab","ReactDOM","render","document","getElementById"],"mappings":"2NAUaA,EAAkB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC/CC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAEhD,OACE,sBAAKM,UAAU,OAAf,UACE,qBAAKA,UAAU,gBAAf,SACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,wBACEI,KAAK,SAELF,UAAWG,IACT,YACA,CACE,sBAAuBL,EAAIC,KAAOL,IAGtCU,QAAS,kBAAMT,EAAUG,IAT3B,SAWGA,EAAIO,OATAP,EAAIC,SAadH,GACC,mBAAGI,UAAU,gBAAb,SACGJ,EAAYU,cC7BjBb,G,MAAc,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,iBAGpCC,EAAad,EAAKe,OAAS,EAAIf,EAAK,GAAK,KAmChCgB,EAjCC,WACd,MAAsCC,mBAASH,GAA/C,mBAAOX,EAAP,KAAoBe,EAApB,KAQA,OACE,qBAAKX,UAAU,MAAf,SAEoB,OAAhBJ,EAEI,qCACE,qBAAII,UAAU,cAAd,iCAEGJ,EAAYS,SAGf,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeE,EAAYG,GAC3BJ,UApBQ,SAACiB,GACD,OAAhBhB,GAAwBgB,EAAOb,KAAOH,EAAYG,IACpDY,EAAeC,SAsBT,6DCrCZC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5d2e2724.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cs from 'classnames';\nimport './Tabs.scss';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  handleTab: (newTab: Tab) => void;\n};\n\nexport const Tabs: FC<Props> = ({ tabs, selectedTabId, handleTab }) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <div className=\"tabs\">\n      <div className=\"tabs__buttons\">\n        {tabs.map(tab => (\n          <button\n            type=\"button\"\n            key={tab.id}\n            className={cs(\n              'tabs__tab',\n              {\n                'tabs__tab--selected': tab.id === selectedTabId,\n              },\n            )}\n            onClick={() => handleTab(tab)}\n          >\n            {tab.title}\n          </button>\n        ))}\n      </div>\n      {selectedTab && (\n        <p className=\"tabs__content\">\n          {selectedTab.content}\n        </p>\n      )}\n    </div>\n  );\n};\n","import { FC, useState } from 'react';\nimport { Tabs } from './components/Tabs/Tabs';\n\nimport './App.scss';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst initialTab = tabs.length > 0 ? tabs[0] : null;\n\nconst App: FC = () => {\n  const [selectedTab, setSelectedTab] = useState(initialTab);\n\n  const onTabSelected = (newTab: Tab) => {\n    if (selectedTab !== null && newTab.id !== selectedTab.id) {\n      setSelectedTab(newTab);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      {\n        selectedTab !== null\n          ? (\n            <>\n              <h1 className=\"app__header\">\n                Selected tab is &nbsp;\n                {selectedTab.title}\n              </h1>\n\n              <Tabs\n                tabs={tabs}\n                selectedTabId={selectedTab.id}\n                handleTab={onTabSelected}\n              />\n            </>\n          )\n          : <p>Invalid array from server</p>\n      }\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}